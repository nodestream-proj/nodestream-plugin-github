name: CI Workflow
permissions:
  pull-requests: write

on:
  push:
    branches: [ "main" ]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Install poetry
        run: pipx install poetry
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: 'poetry'
      - name: Install Dependencies
        run: |
          pip install --upgrade pip
          pip install --upgrade setuptools
          poetry env use "3.12"
          poetry install
      - name: Setup reviewdog
        uses: reviewdog/action-setup@v1
      - name: Run black
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          poetry run black nodestream_github tests --check --diff --quiet | reviewdog -f=diff -name="black-check" -level=error -reporter=github-pr-review
      - name: Run isort
        run: |
          poetry run isort nodestream_github tests --check-only
      - name: Run Lint
        env: 
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          poetry run ruff check nodestream_github tests --output-format rdjson | reviewdog -f=rdjson -name="ruff-check" -level=warning -reporter=github-pr-review
      - name: Run Tests
        run: |
          poetry run pytest --junitxml=pytest.xml --cov-report=term-missing:skip-covered --cov=nodestream_github tests/ | tee pytest-coverage.txt
      - name: Pytest coverage comment
        id: coverageComment
        uses: MishaKav/pytest-coverage-comment@v1
        with:
          pytest-coverage-path: ./pytest-coverage.txt
          junitxml-path: ./pytest.xml
      - name: Failure Check
        if: ${{ steps.coverageComment.output.errors + steps.coverageComment.outputs.failures > 0 }}
        uses: actions/github-script@v3
        with:
          script: |
            core.setFailed('Coverage test below tolerance')
